// <auto-generated />
using System;
using GymMoli.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GymMoli.Migrations
{
    [DbContext(typeof(GymDbContext))]
    [Migration("20240616204357_ThirtMigration")]
    partial class ThirtMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GymMoli.Models.Asistencias", b =>
                {
                    b.Property<int>("ID_Asistencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Asistencia"));

                    b.Property<DateTime>("Fecha_Asistencia")
                        .HasColumnType("datetime2");

                    b.Property<int>("ID_Clase")
                        .HasColumnType("int");

                    b.Property<int>("ID_Cliente")
                        .HasColumnType("int");

                    b.HasKey("ID_Asistencia");

                    b.HasIndex("ID_Clase");

                    b.HasIndex("ID_Cliente");

                    b.ToTable("Asistencias");
                });

            modelBuilder.Entity("GymMoli.Models.Clases", b =>
                {
                    b.Property<int>("ID_Clase")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Clase"));

                    b.Property<int>("Capacidad")
                        .HasColumnType("int");

                    b.Property<string>("Descripción")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Día")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<TimeSpan>("Hora_Fin")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("Hora_Inicio")
                        .HasColumnType("time");

                    b.Property<string>("Nombre_Clase")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID_Clase");

                    b.ToTable("Clases");
                });

            modelBuilder.Entity("GymMoli.Models.Clases_Entrenadores", b =>
                {
                    b.Property<int>("ID_Clase_Entrenador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Clase_Entrenador"));

                    b.Property<int>("ID_Clase")
                        .HasColumnType("int");

                    b.Property<int>("ID_Entrenador")
                        .HasColumnType("int");

                    b.HasKey("ID_Clase_Entrenador");

                    b.HasIndex("ID_Clase");

                    b.HasIndex("ID_Entrenador");

                    b.ToTable("Clases_Entrenadores");
                });

            modelBuilder.Entity("GymMoli.Models.Clientes", b =>
                {
                    b.Property<int>("ID_Cliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Cliente"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Fecha_Nacimiento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Fecha_Registro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Género")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Teléfono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_Cliente");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("GymMoli.Models.Entrenadores", b =>
                {
                    b.Property<int>("ID_Entrenador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Entrenador"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Especialidad")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Teléfono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_Entrenador");

                    b.ToTable("Entrenadores");
                });

            modelBuilder.Entity("GymMoli.Models.Inscripciones", b =>
                {
                    b.Property<int>("ID_Inscripción")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Inscripción"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("Fecha_Fin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Fecha_Inicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("ID_Cliente")
                        .HasColumnType("int");

                    b.Property<int>("ID_Membresía")
                        .HasColumnType("int");

                    b.HasKey("ID_Inscripción");

                    b.HasIndex("ID_Cliente");

                    b.HasIndex("ID_Membresía");

                    b.ToTable("Inscripciones");
                });

            modelBuilder.Entity("GymMoli.Models.Membresias", b =>
                {
                    b.Property<int>("ID_Membresía")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Membresía"));

                    b.Property<int>("Duración_Días")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Tipo_Membresía")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID_Membresía");

                    b.ToTable("Membresias");
                });

            modelBuilder.Entity("GymMoli.Models.Asistencias", b =>
                {
                    b.HasOne("GymMoli.Models.Clases", "Clase")
                        .WithMany("Asistencias")
                        .HasForeignKey("ID_Clase")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GymMoli.Models.Clientes", "Cliente")
                        .WithMany()
                        .HasForeignKey("ID_Cliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clase");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("GymMoli.Models.Clases_Entrenadores", b =>
                {
                    b.HasOne("GymMoli.Models.Clases", "Clase")
                        .WithMany("Clases_Entrenadores")
                        .HasForeignKey("ID_Clase")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GymMoli.Models.Entrenadores", "Entrenador")
                        .WithMany("Clases_Entrenadores")
                        .HasForeignKey("ID_Entrenador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clase");

                    b.Navigation("Entrenador");
                });

            modelBuilder.Entity("GymMoli.Models.Inscripciones", b =>
                {
                    b.HasOne("GymMoli.Models.Clientes", "Cliente")
                        .WithMany()
                        .HasForeignKey("ID_Cliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GymMoli.Models.Membresias", "Membresía")
                        .WithMany()
                        .HasForeignKey("ID_Membresía")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Membresía");
                });

            modelBuilder.Entity("GymMoli.Models.Clases", b =>
                {
                    b.Navigation("Asistencias");

                    b.Navigation("Clases_Entrenadores");
                });

            modelBuilder.Entity("GymMoli.Models.Entrenadores", b =>
                {
                    b.Navigation("Clases_Entrenadores");
                });
#pragma warning restore 612, 618
        }
    }
}
